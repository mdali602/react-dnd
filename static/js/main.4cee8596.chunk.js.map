{"version":3,"sources":["store/reducers/dragReducer.js","store/reducers/rootReducer.js","store/types/dragTypes.js","AppDragDropDemo.js","store/actions/dragAction.js","index.js","store/index.js"],"names":["initialState","items","JSON","parse","localStorage","getItem","combineReducers","dragReducer","state","action","type","dragItems","payload","setItem","stringify","id","value","clear","AppDragDropDemo","focused","handleDragStart","ev","yFact","xFact","initialPos","x","pageX","y","pageY","handleDragOver","preventDefault","handleDrop","pos","props","dropped","handleChange","idx","setState","target","onFocus","e","onBlur","updateItem","this","className","onDragStart","draggable","onDragOver","onDrop","map","obj","key","style","width","borderRadius","transform","background","name","onChange","Component","connect","store","dispatch","item","dragAction","updateItemAction","ReactDOM","render","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","document","getElementById"],"mappings":"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","file":"static/js/main.4cee8596.chunk.js","sourcesContent":["import { DROP_ACTION, UPDATE_ITEM_ACTION } from \"../types/dragTypes\";\n\nconst initialState = {\n  items: JSON.parse(localStorage.getItem(\"items\")) || []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case DROP_ACTION:\n      const dragItems = [...state.items, { ...action.payload }];\n      localStorage.setItem(\"items\", JSON.stringify(dragItems));\n      return {\n        ...state,\n        items: dragItems\n      };\n    case UPDATE_ITEM_ACTION:\n      const { id, value } = action.payload;\n      state.items[id][\"value\"] = value;\n      localStorage.clear();\n      localStorage.setItem(\"items\", JSON.stringify(state.items));\n      return {\n        ...state,\n        items: state.items\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport dragReducer from \"./dragReducer\";\nexport default combineReducers({\n  dragReducer\n});\n","export const DROP_ACTION = \"DROP_ACTION\";\nexport const UPDATE_ITEM_ACTION = \"UPDATE_ITEM_ACTION\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { dragAction, updateItemAction } from \"./store/actions/dragAction\";\n\nimport \"./AppDragDropDemo.css\";\n\nclass AppDragDropDemo extends Component {\n  type = \"\";\n  state = {\n    value: \"\",\n    focused: null\n  };\n  handleDragStart = (ev, type) => {\n    this.type = type;\n    const yFact = type === \"circle\" ? 100 : type === \"line\" ? 200 : 0;\n    const xFact = type === \"line\" ? 48 : 0;\n    this.initialPos = {\n      x: ev.pageX - xFact,\n      y: ev.pageY - yFact\n    };\n  };\n\n  handleDragOver = ev => {\n    ev.preventDefault();\n  };\n\n  handleDrop = ev => {\n    const pos = {\n      x: ev.pageX - this.initialPos.x,\n      y: ev.pageY - this.initialPos.y,\n      type: this.type,\n      value: \"\"\n    };\n    this.props.dropped(pos);\n  };\n\n  handleChange = (ev, idx) => {\n    this.setState({\n      value: ev.target.value\n    });\n  };\n\n  onFocus = (e, idx) => {\n    // onFocus\n    this.setState({\n      focused: idx,\n      value: e.target.value\n    });\n  };\n\n  onBlur = (e, idx) => {\n    // onBlur\n    this.props.updateItem(idx, e.target.value);\n    this.setState({\n      focused: null,\n      value: \"\"\n    });\n  };\n\n  render() {\n    const { items } = this.props;\n    const { focused, value } = this.state;\n    return (\n      <div className=\"container-drag\">\n        <div>\n          <div\n            className=\"box square\"\n            onDragStart={e => this.handleDragStart(e, \"square\")}\n            draggable\n          ></div>\n          <div\n            className=\"box circle\"\n            onDragStart={e => this.handleDragStart(e, \"circle\")}\n            draggable\n          ></div>\n          <div\n            className=\"box line\"\n            onDragStart={e => this.handleDragStart(e, \"line\")}\n            draggable\n          ></div>\n        </div>\n        <div\n          className=\"drawing\"\n          onDragOver={e => this.handleDragOver(e)}\n          onDrop={e => this.handleDrop(e)}\n        ></div>\n        {items.map((obj, idx) => {\n          return (\n            <div\n              className=\"drawing-items\"\n              key={idx}\n              style={{\n                width: `${obj.type === \"line\" ? \"2px\" : \"100px\"}`,\n                borderRadius: `${obj.type === \"circle\" ? \"100%\" : \"0\"}`,\n                transform: `translate(${obj.x}px, ${obj.y}px)`,\n                background: `${obj.type === 'line' ? '#000000': '#f0f8ff'}`\n              }}\n            >\n              {obj.type !== \"line\" && (\n                <textarea\n                  name={\"item_\" + idx}\n                  value={focused === idx ? value : obj.value}\n                  onFocus={e => this.onFocus(e, idx)}\n                  onBlur={e => this.onBlur(e, idx)}\n                  onChange={ev => this.handleChange(ev, idx)}\n                ></textarea>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  items: store.dragReducer.items\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dropped: item => dispatch(dragAction(item)),\n  updateItem: (id, value) => dispatch(updateItemAction(id, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppDragDropDemo);\n","import { DROP_ACTION, UPDATE_ITEM_ACTION } from \"../types/dragTypes\";\n\n/*\n src/actions/simpleAction.js\n*/\nexport const dragAction = item => ({\n  type: DROP_ACTION,\n  payload: item\n});\n\nexport const updateItemAction = (id, value) => ({\n  type: UPDATE_ITEM_ACTION,\n  payload: { id, value }\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\nimport AppDragDropDemo from \"./AppDragDropDemo\";\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <AppDragDropDemo />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n}\n"],"sourceRoot":""}